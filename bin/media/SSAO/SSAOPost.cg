
// a very simple and slightly dumb depth aware 4x4 box filter
// the kernel has the following form
//   o o o o
//   o o o o
//   o o x o
//   o o o o 
// where x marks the fragment position and the o marks a sampling point
void smartBoxFilter_fp
(
	in float2 screenTC : TEXCOORD0,
	
	out float4 oColor0 : COLOR0,

	uniform sampler sDepth : register(s0), // normals + depth
	uniform sampler sOcclusion : register(s1),
	uniform float4 screenSize,
	uniform float farClipDistance
)
{
	float fragmentDepth = tex2D(sDepth, screenTC).x;

	float color = 0;
	float weight = 0;
	for (int x = 0; x < 4; x++)
	for (int y = 0; y < 4; y++)
	{
		float sampleDepth = tex2D(sDepth, float2(screenTC.x + (x-2) * screenSize.z, screenTC.y + (y-2) * screenSize.w)).x;
		float dist = abs(fragmentDepth - sampleDepth) * farClipDistance + 0.5;
		float sampleWeight = 1.0f;//1 / (pow(dist, 1) + 1);
		color += sampleWeight * tex2D(sOcclusion, float2(screenTC.x + (x-2) * screenSize.z, screenTC.y + (y-2) * screenSize.w)).x;
		weight += sampleWeight;
	}
	color /= weight;
	oColor0 = color.xxxx;
}
